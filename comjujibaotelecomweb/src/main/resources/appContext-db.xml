<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd"
	default-autowire="byName">


	
	<bean id="wbReadDataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="maxIdle" value="20" />
		<property name="minIdle" value="20" />
		<property name="maxActive" value="120" />
		<property name="validationQuery" value="select 1" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="900000" />
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<property name="connectionProperties" value="characterEncoding=utf8;" />
		<!--<property name="url" value="jdbc:mysql://127.0.0.1/wuheixiaofendui" />-->
		<!--<property name="username" value="root" />-->
		<!--<property name="password" value="123456" />-->

		<property name="url" value="${mysql.url}" />
		<property name="username" value="${mysql.uid}" />
		<property name="password" value="${mysql.password}" />
	</bean>

	
	 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="mapperLocations" value="classpath*:/mapper/*.xml"></property>
		<property name="dataSource" ref="wbReadDataSource" />

    </bean>
    
    <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="wbReadDataSource" />
	</bean>
    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager">
			<ref bean="transactionManager"/>
		</property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

    
 
    
    <!-- 通过扫描的模式，扫描目录下所有的mapper， 根据对应的mapper.xml为其生成代理类-->  
    <bean id="mapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
            <property name="basePackage" value="com.teljjb.dao" />
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean> 
	
	<!-- MyBatis end -->
	
</beans>